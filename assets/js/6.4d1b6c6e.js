(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{275:function(e,t,a){e.exports=a.p+"assets/img/Aspose.Words.554d3b2f-b08d-466a-accf-9ecc0048cbb6.002.23985d5c.png"},293:function(e,t,a){"use strict";a.r(t);var n=a(14),r=Object(n.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"owasp-top-ten-proactive-controls-project"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#owasp-top-ten-proactive-controls-project"}},[e._v("#")]),e._v(" OWASP Top Ten Proactive Controls Project")]),e._v(" "),t("hr"),e._v(" "),t("img",{staticClass:"center",attrs:{alt:"deductionandarrears",width:"90%",height:"auto",src:a(275)}}),e._v(" "),t("p",[t("strong",[e._v("About OWASP")])]),e._v(" "),t("p",[e._v("The "),t("em",[e._v("Open Web Application Security Project")]),e._v(" (OWASP) is a 501c3 non for profit educational charity  dedicated  to  enabling  organizations  to  design,  develop,  acquire,  operate,  and maintain secure software. All OWASP tools, documents, forums, and chapters are free and open  to  anyone  interested  in  improving  application  security.  We  can  be  found  at "),t("a",{attrs:{href:"http://www.owasp.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("www.owasp.org. "),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("OWASP is not affiliated with any technology company. Similar to many open source software projects, OWASP produces many types of materials in a collaborative and open way. The OWASP Foundation is a not-for-profit entity that ensures the project's long-term success.")]),e._v(" "),t("p",[t("strong",[e._v("FOREWORD")])]),e._v(" "),t("p",[e._v("Insecure software is undermining our financial, healthcare, defense, energy, and other critical infrastructure worldwide. As our digital, global infrastructure gets increasingly complex and interconnected, the difficulty of achieving application security increases exponentially. We can no longer afford to tolerate relatively simple security problems.")]),e._v(" "),t("p",[t("strong",[e._v("AIM&OBJECTIF")])]),e._v(" "),t("p",[e._v("The goal of the "),t("em",[e._v("OWASP Top 10 Proactive Controls project (OPC)")]),e._v(" is to raise awareness about application  security  by  describing  the  most  important  areas  of  concern  that  software developers must be aware of. We encourage you to use the OWASP Proactive Controls to get your developers started with application security. Developers can learn from the mistakes of other organizations. We hope that the OWASP Proactive Controls is useful to your efforts in building secure software.)")]),e._v(" "),t("p",[t("strong",[e._v("INTRODUCTION")])]),e._v(" "),t("h2",{attrs:{id:"the-owasp-top-ten-proactive-controls-2018-is-a-list-of-security-techniques-that-should-be-considered-for-every-software-development-project-this-document-is-written-for-developers-to-assist-those-new-to-secure-development"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#the-owasp-top-ten-proactive-controls-2018-is-a-list-of-security-techniques-that-should-be-considered-for-every-software-development-project-this-document-is-written-for-developers-to-assist-those-new-to-secure-development"}},[e._v("#")]),e._v(" The OWASP Top Ten Proactive Controls 2018 is a list of security techniques that should be considered for every software development project. This document is written for developers to assist those new to secure development.")]),e._v(" "),t("p",[t("strong",[e._v("The Top 10 Proactive Controls")])]),e._v(" "),t("p",[e._v("The list is ordered by importance with list item number 1 being the most important üòÉ")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("C1:"),t("strong",[e._v("Define Security Requirements")])])]),e._v(" "),t("li",[t("p",[e._v("C2:"),t("strong",[e._v("Leverage Security Frameworks and Libraries")])])]),e._v(" "),t("li",[t("p",[e._v("C3:"),t("strong",[e._v("Secure sDatabase Access")])])]),e._v(" "),t("li",[t("p",[e._v("C4:"),t("strong",[e._v("Encode and Escape Data")])])]),e._v(" "),t("li",[t("p",[e._v("C5:"),t("strong",[e._v("Validate All Inputs")])])]),e._v(" "),t("li",[t("p",[e._v("C6:"),t("strong",[e._v("Implement Digital Identity")])])]),e._v(" "),t("li",[t("p",[e._v("C7:"),t("strong",[e._v("Enforce Access Controls")])])]),e._v(" "),t("li",[t("p",[e._v("C8:"),t("strong",[e._v("Protect Data Everywhere")])])]),e._v(" "),t("li",[t("p",[e._v("C9:"),t("strong",[e._v("Implement Security Logging and Monitoring")])])]),e._v(" "),t("li",[t("p",[e._v("C10:"),t("strong",[e._v("Handle All Errors and Exceptions")])])])]),e._v(" "),t("hr"),e._v(" "),t("p",[t("em",[t("strong",[e._v("C1: Define Security Requirements")])])]),e._v(" "),t("p",[e._v("A security requirement is a statement of needed security functionality that ensures one of many different security properties of software is being satisfied. Security requirements are derived from industry standards, applicable laws, and a history of past vulnerabilities. Security requirements define new features or additions to existing features to solve a specific security problem or eliminate a potential vulnerability.")]),e._v(" "),t("p",[e._v("Security requirements provide a foundation of vetted security functionality for an application. Instead of creating a custom approach to security for every application, standard security requirements allow developers to reuse the definition of security controls and best practices. Those  same  vetted  security  requirements  provide  solutions  for  security  issues  that  have occurred in the past. Requirements exist to prevent the repeat of past security failures.)")]),e._v(" "),t("p",[t("em",[t("strong",[e._v("The OWASP ASVS")])])]),e._v(" "),t("p",[e._v("The[OWASPApplicationSecurityVerificationStandard&ASVS]\n(https://www.owasp.org/index.php/Category:OWASP_Application_Security_Verification_Standard_Project) is a catalog of available security requirements and verification criteria. OWASP ASVS  can be a source of detailed security requirements for development teams.")]),e._v(" "),t("p",[e._v("Security requirements are categorized into different buckets based on a shared higher order security function. For example, the ASVS contains categories such as authentication, access control, error handling / logging, and web services. Each category contains a collection of requirements  that  represent  the  best  practices  for  that  category  drafted  as  verifiable statements.")]),e._v(" "),t("p",[t("em",[t("strong",[e._v("Augmenting Requirements with User Stories and Misuse Cases")])])]),e._v(" "),t("p",[e._v("The ASVS requirements are basic verifiable statements which can be expanded upon with user stories and misuse cases. The advantage of a user story or misuse case is that it ties the application to exactly what the user or attacker does to the system, versus describing what the system offers to the user.")]),e._v(" "),t("p",[e._v("Here is an example of expanding on an ASVS 3.0.1 requirement. From the ‚ÄúAuthentication Verification  Requirements‚Äù  section  of  ASVS  3.0.1,  requirement  2.19  focuses  on  default passwords.")]),e._v(" "),t("p",[e._v("2.19 Verify there are no default passwords in use for the application framework or any components used by the application such as ‚Äúadmin/password‚Äù")]),e._v(" "),t("p",[e._v("This requirement contains both an action to verify that no default passwords exist, and also carries with it the guidance that no default passwords should be used within the application.")]),e._v(" "),t("p",[e._v("A user story focuses on the perspective of the user, administrator, or attacker of the system, and describes functionality based on what a user wants the system to do for them. A user story takes the form of ‚ÄúAs a user, I can do x, y, and z‚Äù")]),e._v(" "),t("p",[e._v("As a user, I can enter my username and password to gain access to the application.")]),e._v(" "),t("p",[e._v("As a user, I can enter a long password that has a maximum of 1023 characters.")]),e._v(" "),t("p",[e._v("When the story is focused on the attacker and their actions, it is referred to as a misuse case.")]),e._v(" "),t("p",[e._v("As an attacker, I can enter in a default username and password to gain access.")]),e._v(" "),t("p",[e._v("This  story  contains  the  same  message  as  the  traditional  requirement  from  ASVS,  with additional user or attacker details to help make the requirement more testable.")]),e._v(" "),t("p",[t("strong",[e._v("Implementation")])]),e._v(" "),t("p",[e._v("Successful use of security requirements involves four steps. The process includes discovering / selecting, documenting, implementing, and then confirming correct implementation of new security features and functionality within an application.")]),e._v(" "),t("p",[t("em",[t("strong",[e._v("Discovery and Selection")])])]),e._v(" "),t("p",[e._v("The process begins with discovery and selection of security requirements. In this phase, the developer is understanding security requirements from a standard source such as ASVS and choosing which requirements to include for a given release of an application. The point of discovery and selection is to choose a manageable number of security requirements for this release  or  sprint,  and  then  continue  to  iterate  for  each  sprint,  adding  more  security functionality over time.")]),e._v(" "),t("p",[t("em",[t("strong",[e._v("Investigation and Documentation")])])]),e._v(" "),t("p",[e._v("During  investigation  and  documentation,  the  developer  reviews  the  existing  application against the new set of security requirements to determine whether the application currently meets the requirement or if some development is required. This investigation culminates in the documentation of the results of the review.")]),e._v(" "),t("p",[t("em",[t("strong",[e._v("Implementation and Test")])])]),e._v(" "),t("p",[e._v("After  the  need  is  determined  for  development,  the  developer  must  now  modify  the application in some way to add the new functionality or eliminate an insecure option. In this phase the developer first determines the design required to address the requirement, and then completes the code changes to meet the requirement. Test cases should be created to confirm  the  existence  of  the  new  functionality  or  disprove  the existence  of  a  previously insecure option.")]),e._v(" "),t("p",[t("strong",[e._v("Vulnerabilities Prevented")])]),e._v(" "),t("p",[e._v("Security requirements define the security functionality of an application. Better security built in from the beginning of an applications life cycle results in the prevention of many types of vulnerabilities.")]),e._v(" "),t("p",[t("strong",[e._v("References")])]),e._v(" "),t("ul",[t("li",[t("p",[e._v("[OWASPApplicationSecurityVerificationStandard&ASVS]\n(https://www.owasp.org/index.php/Application_Security_Architecture_Cheat_Sheet)")])]),e._v(" "),t("li",[t("p",[e._v("[OWASPMobileApplicationSecurityVerificationStandardMASVS]\n(https://github.com/OWASP/owasp-masvs)")])]),e._v(" "),t("li",[t("p",[e._v("[OWASPTopTen]\n(https://www.owasp.org/index.php/Category:OWASP_Top_Ten_Project)")])])]),e._v(" "),t("hr"),e._v(" "),t("p",[t("em",[t("strong",[e._v("C2: Leverage Security Frameworks and Libraries")])])]),e._v(" "),t("p",[e._v("Secure  coding  libraries  and  software  frameworks  with  embedded  security  help  software developers  guard  against security-related  design  and  implementation  flaws.  A  developer writing an application from scratch might not have sufficient knowledge, time, or budget to properly  implement  or  maintain  security  features.  Leveraging  security  frameworks  helps accomplish security goals more efficiently and accurately.")]),e._v(" "),t("p",[t("em",[t("strong",[e._v("Implementation Best Practices")])])]),e._v(" "),t("p",[e._v("When incorporating third party libraries or frameworks into your software, it is important to consider the following best practices üòÉ")]),e._v(" "),t("ol",[t("li",[t("p",[e._v("Use libraries and frameworks from trusted sources that are actively maintained and widely used by many applications.")])]),e._v(" "),t("li",[t("p",[e._v("Create and maintain an inventory catalog of all the third party libraries.)")])]),e._v(" "),t("li",[t("p",[e._v("Proactively  keep  libraries  and  components  up  to  date.  Use  a  tool  like "),t("a",{attrs:{href:"https://www.owasp.org/index.php/OWASP_Dependency_Check",target:"_blank",rel:"noopener noreferrer"}},[e._v("OWASP Dependency Check"),t("OutboundLink")],1),e._v(" and "),t("a",{attrs:{href:"https://retirejs.github.io/retire.js/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Retire.JS"),t("OutboundLink")],1),e._v(" to identify project dependencies and check if there are any known, publicly disclosed vulnerabilities for all third party code.")])]),e._v(" "),t("li",[t("p",[e._v("Reduce the attack surface by encapsulating the library and expose only the required behaviour into your software.")])])]),e._v(" "),t("p",[t("strong",[e._v("Vulnerabilities Prevented")])]),e._v(" "),t("p",[e._v("Secure  frameworks  and  libraries  can  help  to  prevent  a  wide  range  of  web  application vulnerabilities. It is critical to keep these frameworks and libraries up to date as described in the "),t("a",{attrs:{href:"https://www.owasp.org/index.php/Category:OWASP_Top_Ten_Project",target:"_blank",rel:"noopener noreferrer"}},[e._v("using components with known vulnerabilities Top Ten 2017 risk."),t("OutboundLink")],1)]),e._v(" "),t("p",[t("strong",[e._v("Tools")])]),e._v(" "),t("ul",[t("li",[t("p",[t("a",{attrs:{href:"https://www.owasp.org/index.php/OWASP_Dependency_Check",target:"_blank",rel:"noopener noreferrer"}},[e._v("OWASPDependencyCheck"),t("OutboundLink")],1),e._v("- identifies project dependencies and checks for publicly disclosed vulnerabilities")])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"http://retirejs.github.io/retire.js/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Retire.JS"),t("OutboundLink")],1),e._v(" scanner for JavaScript libraries")])])]),e._v(" "),t("hr"),e._v(" "),t("p",[t("em",[t("strong",[e._v("C3: Secure Database Access")])])]),e._v(" "),t("p",[e._v("This section describes secure access to all data stores, including both relational databases and NoSQL databases. Some areas to consider üòÉ")]),e._v(" "),t("ol",[t("li",[t("p",[e._v("Secure queries")])]),e._v(" "),t("li",[t("p",[e._v("Secure configuration")])]),e._v(" "),t("li",[t("p",[e._v("Secure authentication")])]),e._v(" "),t("li",[t("p",[e._v("Secure communication")])])]),e._v(" "),t("p",[t("strong",[e._v("Secure Queries")])]),e._v(" "),t("p",[e._v("SQL Injection occurs when untrusted user input is dynamically added to a SQL query in an insecure  manner,  often  via  basic  string  concatenation.  SQL  Injection  is  one  of  the  most dangerous application security risks. SQL Injection is easy to exploit and could lead to the entire database being stolen, wiped, or modified. The application can even be used to run dangerous commands against the operating system hosting your database, thereby giving an attacker a foothold on your network.")]),e._v(" "),t("p",[e._v("In  order  to  mitigate  SQL  injection,  untrusted  input  should  be  prevented  from  being interpreted as part of a SQL command. The best way to do this is with the programming technique known as ‚ÄòQuery Parameterization‚Äô. This defense should be applied to SQL, OQL, as well as stored procedure construction.")]),e._v(" "),t("p",[e._v("A good list of query parameterization examples in ASP, ColdFusion, C#, Delphi, .NET, Go, Java, Perl, PHP, PL/SQL, PostgreSQL, Python, R, Ruby and Scheme can  be  found  at")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"http://bobby-tables.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://bobby-tables.com"),t("OutboundLink")],1),e._v(" and the")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://www.owasp.org/index.php/Query_Parameterization_Cheat_Sheet",target:"_blank",rel:"noopener noreferrer"}},[e._v("OWASPCheatSheetonQuery Parameterization."),t("OutboundLink")],1)])]),e._v(" "),t("p",[t("em",[t("strong",[e._v("Caution on Query Parameterization")])])]),e._v(" "),t("p",[e._v("Certain locations in a database query are not parameterizable. These locations are different for each database vendor. Be certain to do very careful exact-match validation or manual escaping  when  confronting  database  query  parameters  that  cannot  be  bound  to  a parameterized  query.  Also,  while  the  use  of  parameterized  queries  largely  has  a  positive impact on performance, certain parameterized queries in specific database implementations  will  affect  performance  negatively.  Be  sure  to  test  queries  for  performance;  especially complex queries with extensive like clause or text searching capabilities.)")]),e._v(" "),t("p",[t("strong",[e._v("Secure Configuration")])]),e._v(" "),t("p",[e._v("Unfortunately, database management systems do not always ship in a ‚Äúsecure by default‚Äù configuration. Care must be taken to ensure that the security controls available from the Database  Management  System (DBMS) and  hosting  platform  are  enabled  and  properly configured. There are standards, guides, and benchmarks available for most common DBMS.")]),e._v(" "),t("p",[t("strong",[e._v("Secure Authentication")])]),e._v(" "),t("p",[e._v("All access to the database should be properly authenticated. Authentication to the DBMS should be accomplished in a secure manner. Authentication should take place only over a secure channel.  Credentials must be properly secured and available for use.")]),e._v(" "),t("p",[t("strong",[e._v("Secure Communication")])]),e._v(" "),t("p",[e._v("Most  DBMS  support  a  variety  of  communications  methods  &services,  APIs,  etc -  secure authenticated,  encrypted&and  insecure  unauthenticated  or  unencrypted.  It  is  a  good practice to only use the secure communications options per the "),t("em",[e._v("Protect Data Everywhere")]),e._v(" control.")]),e._v(" "),t("p",[t("strong",[e._v("Vulnerabilities Prevented")]),e._v(")")]),e._v(" "),t("ul",[t("li",[t("p",[t("a",{attrs:{href:"https://www.owasp.org/index.php/Top_10-2017_A1-Injection",target:"_blank",rel:"noopener noreferrer"}},[e._v("OWASP Top 10 2017- A1: Injection "),t("OutboundLink")],1)])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://www.owasp.org/index.php/Mobile_Top_10_2014-M1",target:"_blank",rel:"noopener noreferrer"}},[e._v("OWASP Mobile Top 10 2014-M1 Weak Server Side Controls"),t("OutboundLink")],1)])])]),e._v(" "),t("p",[t("strong",[e._v("References")])]),e._v(" "),t("ul",[t("li",[t("p",[t("a",{attrs:{href:"https://www.owasp.org/index.php/Query_Parameterization_Cheat_Sheet",target:"_blank",rel:"noopener noreferrer"}},[e._v("OWASP Cheat Sheet: Query Parameterization"),t("OutboundLink")],1)])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"http://bobby-tables.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Bobby Tables: A guide to preventing SQL injection"),t("OutboundLink")],1)])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://www.cisecurity.org/cis-benchmarks/",target:"_blank",rel:"noopener noreferrer"}},[e._v("CIS Database Hardening Standards"),t("OutboundLink")],1)])])]),e._v(" "),t("hr"),e._v(" "),t("p",[t("strong",[e._v("C4: Encode and Escape Data")])]),e._v(" "),t("p",[e._v("Encoding and escaping are defensive techniques meant to stop injection attacks.")]),e._v(" "),t("ul",[t("li",[e._v('Encoding: commonly  called  "Output  Encoding"  involves  translating  special  characters  into  some different  but  equivalent  form  that  is  no  longer  dangerous  in  the  target  interpreter,  for example translating the ‚Äú<‚Äù character into the &lt; string when writing to an HTML page.')]),e._v(" "),t("li",[e._v('Escaping  involves  adding  a  special  character  before  the  character/string  to  avoid  it  being misinterpreted, for example, adding a ‚Äú\\‚Äù character before a ‚Äú"‚Äù &double quote character so that it is interpreted as text and not as closing a string.')])]),e._v(" "),t("p",[e._v("Output encoding is best applied just before the content is passed to the target interpreter. If this  defense  is  performed  too  early  in  the  processing  of  a  request  then  the  encoding  or escaping  may  interfere  with  the  use  of  the  content  in  other  parts  of  the  program.  For example if you HTML escape content before storing that data in the database and the UI automatically escapes that data a second time then the content will not display properly due to being double escaped.")]),e._v(" "),t("p",[t("strong",[e._v("Contextual Output Encoding")])]),e._v(" "),t("p",[e._v("Contextual output encoding is a crucial security programming technique needed to stop XSS. This  defense  is  performed  on  output,  when  you‚Äôre  building  a  user interface,  at  the  last moment  before  untrusted  data  is  dynamically added  to  HTML.  The  type  of  encoding  will depend on the location or context in the document where data is being displayed or stored. The  different  types  of  encoding  that  would  be  used  for building  secure  user  interfaces includes  HTML  Entity  Encoding,  HTML  Attribute  Encoding,  JavaScript  Encoding,  and  URL Encoding.)")]),e._v(" "),t("p",[t("em",[t("strong",[e._v("Java Encoding Examples")])])]),e._v(" "),t("p",[e._v("For examples of the OWASP Java Encoder providing contextual output encoding see\n"),t("a",{attrs:{href:"https://www.owasp.org/index.php/OWASP_Java_Encoder_Project#tab=Use_the_Java_Encoder_Project",target:"_blank",rel:"noopener noreferrer"}},[e._v("OWASP Java Encoder Project Examples"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("em",[t("strong",[e._v(".NET Encoding Examples")])])]),e._v(" "),t("p",[e._v("Starting with .NET 4.5 , the Anti-Cross Site Scripting library is part of the framework, but not enabled by default. You can specify to use AntiXssEncoder from this library as the default encoder for your entire application using the web.conf settings. When applied is important to contextual  encode  your  output  -  that  means  to  use  the  right  function  from  the AntiXSSEncoder library for the appropriate location of data in document.)")]),e._v(" "),t("p",[t("em",[t("strong",[e._v("PHP Encoding Examples")])]),e._v(" Zend Framework 2")]),e._v(" "),t("p",[e._v("In  Zend  Framework  2 (ZF2),  Zend\\Escaper  can  be  used  for  encoding  the  output.  For contextual encoding examples see\n"),t("a",{attrs:{href:"https://framework.zend.com/blog/2017-05-16-zend-escaper.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Context-specific escaping with zend-escaper."),t("OutboundLink")],1)]),e._v(" "),t("p",[t("strong",[e._v("Other Types of Encoding and Injection Defense")])]),e._v(" "),t("p",[e._v('Encoding/Escaping can be used to neutralize content against other forms of injection. For example, it\'s possible to neutralize certain special meta-characters when adding input to an operating  system  command.  This  is  called  "OS  command  escaping",  "shell  escaping",  or similar. This defense can be used to stop "Command Injection" vulnerabilities.)')]),e._v(" "),t("p",[e._v("There are other forms of escaping that can be used to stop injection such as XML attribute escaping stopping various forms of XML and XML path injection, as well as LDAP distinguished name escaping that can be used to stop various forms of LDAP injection.")]),e._v(" "),t("p",[t("em",[t("strong",[e._v("Character Encoding and Canonicalization")])])]),e._v(" "),t("p",[e._v("Unicode Encoding is a method for storing characters with multiple bytes. Wherever input data is allowed, data can be entered using\n"),t("a",{attrs:{href:"https://www.owasp.org/index.php/Unicode_Encoding",target:"_blank",rel:"noopener noreferrer"}},[e._v("Unicode"),t("OutboundLink")],1),e._v(" to disguise malicious code and permit a variety of attacks.\n"),t("a",{attrs:{href:"https://tools.ietf.org/html/rfc2279",target:"_blank",rel:"noopener noreferrer"}},[e._v("RFC2279"),t("OutboundLink")],1),e._v(" references many ways that text can be encoded.)")]),e._v(" "),t("p",[e._v("Canonicalization is a method in which systems convert data into a simple or standard form.  Web applications commonly use character canonicalization to ensure all content is of the same character type when stored or displayed.)")]),e._v(" "),t("p",[e._v("To be secure against canonicalization related attacks means an application should be safe when malformed Unicode and other malformed character representations are entered.")]),e._v(" "),t("p",[t("strong",[e._v("Vulnerabilities Prevented")])]),e._v(" "),t("ul",[t("li",[t("p",[t("a",{attrs:{href:"https://www.owasp.org/index.php/Top_10-2017_A1-Injection",target:"_blank",rel:"noopener noreferrer"}},[e._v("OWASP Top 10 2017 - A1: Injection "),t("OutboundLink")],1)])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://www.owasp.org/index.php/Top_10-2017_A7-Cross-Site_Scripting_&#40;XSS&#41;",target:"_blank",rel:"noopener noreferrer"}},[e._v("OWASP Top 10 2017 - A7: Cross Site Scripting,XSS "),t("OutboundLink")],1)])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://www.owasp.org/index.php/Mobile_Top_10_2014-M7",target:"_blank",rel:"noopener noreferrer"}},[e._v("OWASP Mobile_Top_10_2014-M7 Client Side Injection"),t("OutboundLink")],1)])])]),e._v(" "),t("p",[t("strong",[e._v("References")])]),e._v(" "),t("ul",[t("li",[t("p",[e._v("https://www.owasp.org/index.php/Top_10_2013-A1-Injection)")])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://www.owasp.org/index.php/XSS",target:"_blank",rel:"noopener noreferrer"}},[e._v("XSS"),t("OutboundLink")],1)])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet",target:"_blank",rel:"noopener noreferrer"}},[e._v("Generalinformation"),t("OutboundLink")],1)])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://www.owasp.org/index.php/XSS_&#40;Cross_Site_Scripting&#41;_Prevention_Cheat_Sheet",target:"_blank",rel:"noopener noreferrer"}},[e._v("OWASP Cheat Sheet: XSS Prevention"),t("OutboundLink")],1)])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://www.owasp.org/index.php/XSS_%5CCross_Site_Scripting_Prevention_Cheat_Sheet",target:"_blank",rel:"noopener noreferrer"}},[e._v("Stopping XSS in your web application"),t("OutboundLink")],1)])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://www.owasp.org/index.php/DOM_based_XSS_Prevention_Cheat_Sheet",target:"_blank",rel:"noopener noreferrer"}},[e._v("OWASP Cheat Sheet: DOM based XSS Prevention"),t("OutboundLink")],1)])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://www.owasp.org/index.php/Injection_Prevention_Cheat_Sheet",target:"_blank",rel:"noopener noreferrer"}},[e._v("OWASP Cheat Sheet: Injection Prevention"),t("OutboundLink")],1)])])]),e._v(" "),t("p",[t("strong",[e._v("Tools")])]),e._v(" "),t("ul",[t("li",[t("p",[t("a",{attrs:{href:"https://www.owasp.org/index.php/OWASP_Java_Encoder_Project",target:"_blank",rel:"noopener noreferrer"}},[e._v("OWASP Java Encoder Project "),t("OutboundLink")],1)])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://msdn.microsoft.com/en-us/library/system.web.security.antixss.antixssencoder%5Cv=vs.110.aspx",target:"_blank",rel:"noopener noreferrer"}},[e._v("AntiXSSEncoder "),t("OutboundLink")],1)])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://framework.zend.com/blog/2017-05-16-zend-escaper.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Zend\\Escaper"),t("OutboundLink")],1),e._v("- examples of contextual encoding")])])]),e._v(" "),t("hr"),e._v(" "),t("p",[t("strong",[e._v("C5: Validate All Inputs")])]),e._v(" "),t("p",[e._v("Input validation is a programming technique that ensures only properly formatted data may enter a software system component.")]),e._v(" "),t("p",[t("strong",[e._v("Syntax and Semantic Validity")])]),e._v(" "),t("p",[e._v("An  application  should  check  that  data  is  both "),t("strong",[e._v("syntactically")]),e._v("  and "),t("strong",[e._v("semantically")]),e._v("  valid  in  that order before using it in any way & including displaying it back to the user.")]),e._v(" "),t("ul",[t("li",[t("p",[t("strong",[e._v("Syntax validity")]),e._v(" means that the data is in the form that is expected. For example, an application may allow a user to select a four-digit ‚Äúaccount ID‚Äù to perform some kind of operation. The application should assume the user is entering a SQL injection payload, and should check that the data entered by the user is exactly four digits in length, and consists only of numbers in addition to utilizing proper query parameterization.")])]),e._v(" "),t("li",[t("p",[t("strong",[e._v("Semantic validity")]),e._v(" includes only accepting input that is within an acceptable range for the given application functionality and context. For example, a start date must be before an end date when choosing date ranges.")])])]),e._v(" "),t("p",[t("strong",[e._v("Whitelisting vs Blacklisting")])]),e._v(" "),t("p",[e._v("There are two general approaches to performing input syntax validation, commonly known as blacklisting and whitelisting üòÉ")]),e._v(" "),t("ul",[t("li",[t("p",[t("strong",[e._v("Blacklisting")]),e._v(" or "),t("strong",[e._v("blacklist validation")]),e._v(" attempts to check that given data does not contain ‚Äúknown bad‚Äù content. For example, a web application may block input that contains the exact text <SCRIPT> in order to help prevent XSS. However, this defense could be evaded with a lower case script tag or a script tag of mixed case.")])]),e._v(" "),t("li",[t("p",[t("strong",[e._v("Whitelisting")]),e._v(" or "),t("strong",[e._v("whitelist validation")]),e._v(" attempts to check that a given data matches a set of ‚Äúknown good‚Äù rules. For example a whitelist validation rule for a US state would be a 2-letter code that is only one of the valid US states.)")])])]),e._v(" "),t("p",[e._v("When  building  secure  software,  whitelisting  is  the  recommended  minimal  approach. Blacklisting is prone to error and can be bypassed with various evasion techniques and can be dangerous when depended on by itself. Even though blacklisting can often be evaded it can  often be useful to help detect obvious attacks. So while "),t("strong",[e._v("whitelisting")]),e._v(" helps limit the attack surface by ensuring data is of the right syntactic and semantic validity, "),t("strong",[e._v("blacklisting")]),e._v(" helps detect and potentially stop obvious attacks.")]),e._v(" "),t("p",[t("strong",[e._v("Client side and Server side Validation")])]),e._v(" "),t("p",[e._v("Input  validation  must  always  be  done  on  the  server-side  for  security.  While  client  side validation can be useful for both functional and some security purposes it can often be easily bypassed. This makes server-side validation even more fundamental to security. For example, JavaScript validation may alert the user that a particular field must consist of numbers but the server side application must validate that the submitted data only consists of numbers in the appropriate numerical range for that feature.")]),e._v(" "),t("p",[t("strong",[e._v("Regular Expressions")])]),e._v(" "),t("p",[e._v("Regular expressions offer a way to check whether data matches a specific pattern. Let‚Äôs start with a basic example.")]),e._v(" "),t("p",[e._v("The following regular expression is used to define a whitelist rule to validate usernames.")]),e._v(" "),t("p",[t("strong",[e._v("^[a-z0-9_]{3,16}$")])]),e._v(" "),t("p",[e._v("This regular expression allows only lowercase letters, numbers and the underscore character. The username is also restricted to a length of 3 and 16 characters.")]),e._v(" "),t("p",[t("em",[t("strong",[e._v("Caution: Potential for Denial of Service")])])]),e._v(" "),t("p",[e._v("Care should be exercised when creating regular expressions. Poorly designed expressions may result in potential denial of service conditions, aka "),t("a",{attrs:{href:"https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS",target:"_blank",rel:"noopener noreferrer"}},[e._v("ReDoS"),t("OutboundLink")],1),e._v(" Various tools can test to verify that regular expressions are not vulnerable to ReDoS.")]),e._v(" "),t("p",[t("em",[t("strong",[e._v("Caution: Complexity")])])]),e._v(" "),t("p",[e._v("Regular expressions are just one way to accomplish validation. Regular expressions can be difficult to maintain or understand for some developers. Other validation alternatives involve writing  validation  methods  programmatically  which  can  be  easier  to  maintain  for  some developers.")]),e._v(" "),t("p",[t("strong",[e._v("Limits of Input Validation")])]),e._v(" "),t("p",[e._v('Input validation does not always make data ‚Äúsafe‚Äù since certain forms of complex input may be "valid" but still dangerous. For example a valid email address may contain a SQL injection attack or a valid URL may contain a Cross Site Scripting attack.  Additional defenses besides input validation should always be applied to data such as query parameterization or escaping.)')]),e._v(" "),t("p",[t("strong",[e._v("Challenges of Validating Serialized Data")])]),e._v(" "),t("p",[e._v("Some  forms  of  input  are  so  complex  that  validation  can  only  minimally  protect  the application. For example, it's dangerous to deserialize untrusted data or data that can be manipulated by an attacker. The only safe architectural pattern is to not accept serialized objects from untrusted sources or to only deserialize in limited capacity for only simple data types. You should avoid processing serialized data formats and use easier to defend formats such as JSON when possible.)")]),e._v(" "),t("p",[e._v("If that is not possible then consider a series of validation defenses when processing serialized data.)")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("Implement integrity checks or encryption of the serialized objects to prevent hostile object creation or data tampering.")])]),e._v(" "),t("li",[t("p",[e._v("Enforce strict type constraints during deserialization before object creation; typically code is expecting a definable set of classes. Bypasses to this technique have been demonstrated.")])]),e._v(" "),t("li",[t("p",[e._v("Isolate code that deserializes, such that it runs in very low privilege environments, such as temporary containers.")])]),e._v(" "),t("li",[t("p",[e._v("Log security deserialization exceptions and failures, such as where the incoming type is not the expected type, or the deserialization throws exceptions.")])]),e._v(" "),t("li",[t("p",[e._v("Restrict or monitor incoming and outgoing network connectivity from containers or servers that deserialize.)")])]),e._v(" "),t("li",[t("p",[e._v("Monitor deserialization, alerting if a user deserializes constantly.")])])]),e._v(" "),t("p",[t("strong",[e._v("Unexpected User Input (Mass Assignment)")])]),e._v(" "),t("p",[e._v("Some  frameworks  support  automatic  binding  of  HTTP  requests  parameters  to  server-side objects used by the application. This auto-binding feature can allow an attacker to update server-side objects that were not meant to be modified. The attacker can possibly modify their access control level or circumvent the intended business logic of the application with this feature.)")]),e._v(" "),t("p",[e._v("This  attack  has  a  number  of  names  including:  mass  assignment,  autobinding  and  object injection.")]),e._v(" "),t("p",[e._v("As a simple example, if the user object has a field privilege which specifies the user's privilege level in the application, a malicious user can look for pages where user data is modified and add privilege=admin to the HTTP parameters sent.  If auto-binding is enabled in an insecure fashion, the server-side object representing the user will be modified accordingly.)")]),e._v(" "),t("p",[e._v("Two approaches can be used to handle this üòÉ")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("Avoid binding input directly and use Data Transfer Objects (DTOs) instead.")])]),e._v(" "),t("li",[t("p",[e._v("Enable auto-binding but set up whitelist rules for each page or feature to define which fields are allowed to be auto-bound.")])])]),e._v(" "),t("p",[e._v("More examples are available in the "),t("a",{attrs:{href:"https://www.owasp.org/index.php/Mass_Assignment_Cheat_Sheet",target:"_blank",rel:"noopener noreferrer"}},[e._v(" OWASP Mass Assignment Cheat Sheet."),t("OutboundLink")],1)]),e._v(" "),t("p",[t("strong",[e._v("Validating and Sanitizing HTML")])]),e._v(" "),t("p",[e._v("Consider an application that needs to accept HTML from users via a WYSIWYG editor that represents content as HTML or features that directly accept HTML in input. In this situation validation or escaping will not help.")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("Regular  expressions  are  not  expressive  enough  to  understand  the  complexity  of HTML5.")])]),e._v(" "),t("li",[t("p",[e._v("Encoding or escaping HTML will not help since it will cause the HTML to not render properly.")])])]),e._v(" "),t("p",[e._v("Therefore, you need a library that can parse and clean HTML formatted text. Please see the "),t("a",{attrs:{href:"https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet#RULE_.236_-_Sanitize_HTML_Markup_with_a_Library_Designed_for_the_Job",target:"_blank",rel:"noopener noreferrer"}},[e._v("XSS Prevention Cheat Sheet on HTML Sanitization "),t("OutboundLink")],1),e._v(" for more information on HTML Sanitization.")]),e._v(" "),t("p",[t("strong",[e._v("Validation Functionality in Libraries and Frameworks")])]),e._v(" "),t("p",[e._v('All languages and most frameworks provide validation libraries or functions which should be leveraged  to  validate  data.  Validation  libraries typically  cover  common  data  types,  length requirements,  integer  ranges,  "is  null"  checks  and  more.  Many  validation  libraries  and frameworks allow you to define your own regular expression or logic for custom validation in a way that allows the programmer to leverage that functionality throughout your application. Examples of validation functionality include')]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://secure.php.net/manual/en/filter.examples.validation.php",target:"_blank",rel:"noopener noreferrer"}},[e._v("PHP\\‚Äôsfilter functions"),t("OutboundLink")],1),e._v(" or")]),e._v(" "),t("li",[e._v("the"),t("a",{attrs:{href:"http://hibernate.org/validator/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Hibernate Validator "),t("OutboundLink")],1),e._v(" for Java.\nExamples of HTML Sanitizers include")]),e._v(" "),t("li",[t("a",{attrs:{href:"http://edgeapi.rubyonrails.org/classes/ActionView/Helpers/SanitizeHelper.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("RubyonRailsSanitizeMethod,"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://www.owasp.org/index.php/OWASP_Java_HTML_Sanitizer_Project",target:"_blank",rel:"noopener noreferrer"}},[e._v("OWASP Java HTML Sanitizer "),t("OutboundLink")],1),e._v(" or")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/cure53/DOMPurify",target:"_blank",rel:"noopener noreferrer"}},[e._v("DOMPurify"),t("OutboundLink")],1)])]),e._v(" "),t("p",[t("strong",[e._v("Vulnerabilities Prevented")])]),e._v(" "),t("ul",[t("li",[t("p",[e._v("Input validation reduces the attack surface of applications and can sometimes make attacks more difficult against an application.")])]),e._v(" "),t("li",[t("p",[e._v("Input validation is a technique that provides security to certain forms of data, specific to certain attacks and cannot be reliably applied as a general security rule.")])]),e._v(" "),t("li",[t("p",[e._v("Input validation should not be used as the primary method of preventing")])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet",target:"_blank",rel:"noopener noreferrer"}},[e._v(" XSS,"),t("OutboundLink")],1)])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://www.owasp.org/index.php/SQL_Injection_Prevention_Cheat_Sheet",target:"_blank",rel:"noopener noreferrer"}},[e._v(" SQL Injection "),t("OutboundLink")],1),e._v(" and other attacks.")])])]),e._v(" "),t("p",[t("strong",[e._v("References")])]),e._v(" "),t("ul",[t("li",[t("p",[t("a",{attrs:{href:"https://www.owasp.org/index.php/Input_Validation_Cheat_Sheet",target:"_blank",rel:"noopener noreferrer"}},[e._v("OWASP Cheat Sheet: Input Validation"),t("OutboundLink")],1)])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://www.owasp.org/index.php/IOS_Developer_Cheat_Sheet#Security_Decisions_via_Untrusted_Inputs_.28M7.29",target:"_blank",rel:"noopener noreferrer"}},[e._v("OWASP Cheat Sheet: iOS - Security Decisions via Untrusted Inputs"),t("OutboundLink")],1)])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://www.owasp.org/index.php/Testing_for_Input_Validation",target:"_blank",rel:"noopener noreferrer"}},[e._v("OWASP Testing Guide: Testing for Input Validation"),t("OutboundLink")],1)])])]),e._v(" "),t("p",[t("strong",[e._v("Tools")])]),e._v(" "),t("ul",[t("li",[t("p",[t("a",{attrs:{href:"https://www.owasp.org/index.php/OWASP_Java_HTML_Sanitizer",target:"_blank",rel:"noopener noreferrer"}},[e._v("OWASP Java HTML Sanitizer Project"),t("OutboundLink")],1)])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"http://beanvalidation.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Java JSR-303/JSR-349 Bean Validation "),t("OutboundLink")],1)])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"http://hibernate.org/validator/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Java Hibernate Validator "),t("OutboundLink")],1)])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"http://openjdk.java.net/jeps/290",target:"_blank",rel:"noopener noreferrer"}},[e._v("JEP-290 Filter Incoming Serialization Data"),t("OutboundLink")],1)])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://commons.apache.org/proper/commons-validator/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Apache Commons Validator"),t("OutboundLink")],1)])]),e._v(" "),t("li",[t("p",[e._v("PHP‚Äôs"),t("a",{attrs:{href:"https://secure.php.net/manual/en/book.filter.php",target:"_blank",rel:"noopener noreferrer"}},[e._v(" filter functions "),t("OutboundLink")],1)])])]),e._v(" "),t("hr")])}),[],!1,null,null,null);t.default=r.exports}}]);