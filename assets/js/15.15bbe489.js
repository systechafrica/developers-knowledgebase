(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{295:function(a,t,s){"use strict";s.r(t);var e=s(14),r=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"git-backup"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-backup"}},[a._v("#")]),a._v(" GIT Backup")]),a._v(" "),t("p",[a._v("To automate git backup from the cloud to the on-premise server, follow the following steps.\nCreate a bash script that you can run manually to backup git to the hosting server using the following bash commands:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("bash")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("EOF\n# Run GitLab backup command\nif "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$GITLAB_DIR")]),a._v('/bin/gitlab-rake gitlab:backup:create; then\n    echo "GitLab backup completed successfully."\n\n    # Delete previous backups, retaining only the latest 2\n    ls -1t /var/opt/gitlab/backups | tail -n +3 | xargs -I {} sudo rm /var/opt/gitlab/backups/{}\n\n    # Remove all previous backups in '),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$BACKUP_DIR")]),a._v('\n    rm -f "'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$BACKUP_DIR")]),a._v('"/*.tar\n    rm -f "'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$BACKUP_DIR")]),a._v('"/gitlab-*\n    rm -f "'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$BACKUP_DIR")]),a._v('"/gitlab.*\n\n    # Copy the backup archive to '),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$BACKUP_DIR")]),a._v(' with timestamp\n    sudo cp /var/opt/gitlab/backups/*.tar "'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$BACKUP_DIR")]),a._v('/"\n\n    # Adjust permissions for the copied backup files\n    sudo chmod 644 "'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$BACKUP_DIR")]),a._v('"/*.tar\n\n    # Copy gitlab.rb with timestamp to '),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$BACKUP_DIR")]),a._v('\n    sudo cp /etc/gitlab/gitlab.rb "'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$BACKUP_DIR")]),a._v("/gitlab.rb_"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$TIMESTAMP")]),a._v('"\n\n    # Adjust permissions for the copied gitlab.rb file\n    sudo chmod 644 "'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$BACKUP_DIR")]),a._v('/gitlab.rb_"*\n\n    # Copy gitlab-secrets.json with timestamp to '),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$BACKUP_DIR")]),a._v('\n    sudo cp /etc/gitlab/gitlab-secrets.json "'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$BACKUP_DIR")]),a._v("/gitlab-secrets.json_"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$TIMESTAMP")]),a._v('"\n\n    # Adjust permissions for the copied gitlab-secrets.json file\n    sudo chmod 600 "'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$BACKUP_DIR")]),a._v('/gitlab-secrets."*\n\n    echo "Backup archive and files, along with the latest 2 backups, copied to '),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$BACKUP_DIR")]),a._v('"\nelse\n    echo "GitLab backup failed. Check logs for more details."\nfi\nEOF')]),a._v("\n")])])]),t("p",[a._v("This script will backup the git tar file plus all the necessary configurations required during the restoring process, that is gitlab secrets & gitlab.rb files.")]),a._v(" "),t("h2",{attrs:{id:"backing-git-to-the-local-server"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#backing-git-to-the-local-server"}},[a._v("#")]),a._v(" Backing git to the local server")]),a._v(" "),t("p",[a._v("Generate ssh-key in the destination server using the command: ssh-keygen -t rsa.\nInput the password of your choice or leave it blank and confirm.\nInput the paraphrase of your choice or leave it blank and confirm.\nRun: ssh-copy-id user@gitlab_host\nTest connection: ssh user@gitlab_host")])])}),[],!1,null,null,null);t.default=r.exports}}]);