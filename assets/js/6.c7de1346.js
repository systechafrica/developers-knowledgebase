(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{275:function(e,t,i){e.exports=i.p+"assets/img/Aspose.Words.554d3b2f-b08d-466a-accf-9ecc0048cbb6.002.23985d5c.png"},293:function(e,t,i){"use strict";i.r(t);var r=i(14),o=Object(r.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"owasp-top-ten-proactive-controls-project"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#owasp-top-ten-proactive-controls-project"}},[e._v("#")]),e._v(" OWASP Top Ten Proactive Controls Project")]),e._v(" "),t("hr"),e._v(" "),t("img",{staticClass:"center",attrs:{alt:"deductionandarrears",width:"90%",height:"auto",src:i(275)}}),e._v(" "),t("p",[t("strong",[e._v("About OWASP")])]),e._v(" "),t("p",[e._v("The "),t("em",[e._v("Open Web Application Security Project")]),e._v(" (OWASP) is a 501c3 non for profit educational charity  dedicated  to  enabling  organizations  to  design,  develop,  acquire,  operate,  and maintain secure software. All OWASP tools, documents, forums, and chapters are free and open  to  anyone  interested  in  improving  application  security.  We  can  be  found  at "),t("a",{attrs:{href:"http://www.owasp.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("www.owasp.org. "),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("OWASP is not affiliated with any technology company. Similar to many open source software projects, OWASP produces many types of materials in a collaborative and open way. The OWASP Foundation is a not-for-profit entity that ensures the project's long-term success.")]),e._v(" "),t("p",[t("strong",[e._v("FOREWORD")])]),e._v(" "),t("p",[e._v("Insecure software is undermining our financial, healthcare, defense, energy, and other critical infrastructure worldwide. As our digital, global infrastructure gets increasingly complex and interconnected, the difficulty of achieving application security increases exponentially. We can no longer afford to tolerate relatively simple security problems.")]),e._v(" "),t("p",[t("strong",[e._v("AIM&OBJECTIF")])]),e._v(" "),t("p",[e._v("The goal of the "),t("em",[e._v("OWASP Top 10 Proactive Controls project (OPC)")]),e._v(" is to raise awareness about application  security  by  describing  the  most  important  areas  of  concern  that  software developers must be aware of. We encourage you to use the OWASP Proactive Controls to get your developers started with application security. Developers can learn from the mistakes of other organizations. We hope that the OWASP Proactive Controls is useful to your efforts in building secure software.)")]),e._v(" "),t("p",[t("strong",[e._v("INTRODUCTION")])]),e._v(" "),t("p",[e._v("The OWASP Top Ten Proactive Controls 2018 is a list of security techniques that should be considered for every software development project. This document is written for developers to assist those new to secure development.")]),e._v(" "),t("p",[t("strong",[e._v("The Top 10 Proactive Controls")])]),e._v(" "),t("p",[e._v("The list is ordered by importance with list item number 1 being the most important üòÉ")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("C1:"),t("strong",[e._v("Define Security Requirements")])])]),e._v(" "),t("li",[t("p",[e._v("C2:"),t("strong",[e._v("Leverage Security Frameworks and Libraries")])])]),e._v(" "),t("li",[t("p",[e._v("C3:"),t("strong",[e._v("Secure Database Access")])])]),e._v(" "),t("li",[t("p",[e._v("C4:"),t("strong",[e._v("Encode and Escape Data")])])]),e._v(" "),t("li",[t("p",[e._v("C5:"),t("strong",[e._v("Validate All Inputs")])])]),e._v(" "),t("li",[t("p",[e._v("C6:"),t("strong",[e._v("Implement Digital Identity")])])]),e._v(" "),t("li",[t("p",[e._v("C7:"),t("strong",[e._v("Enforce Access Controls")])])]),e._v(" "),t("li",[t("p",[e._v("C8:"),t("strong",[e._v("Protect Data Everywhere")])])]),e._v(" "),t("li",[t("p",[e._v("C9:"),t("strong",[e._v("Implement Security Logging and Monitoring")])])]),e._v(" "),t("li",[t("p",[e._v("C10:"),t("strong",[e._v("Handle All Errors and Exceptions")])])])]),e._v(" "),t("p",[t("strong",[e._v("C1: Define Security Requirements")])]),e._v(" "),t("p",[e._v("A security requirement is a statement of needed security functionality that ensures one of many different security properties of software is being satisfied. Security requirements are derived from industry standards, applicable laws, and a history of past vulnerabilities. Security requirements define new features or additions to existing features to solve a specific security problem or eliminate a potential vulnerability.")]),e._v(" "),t("p",[e._v("Security requirements provide a foundation of vetted security functionality for an application. Instead of creating a custom approach to security for every application, standard security requirements allow developers to reuse the definition of security controls and best practices. Those  same  vetted  security  requirements  provide  solutions  for  security  issues  that  have occurred in the past. Requirements exist to prevent the repeat of past security failures.)")]),e._v(" "),t("p",[t("em",[t("strong",[e._v("The OWASP ASVS")])])]),e._v(" "),t("p",[e._v("The[ OWASP Application Security Verification Standard &ASVS]\n(https://www.owasp.org/index.php/Category:OWASP_Application_Security_Verification_Standard_Project) is a catalog of available security requirements and verification criteria. OWASP ASVS  can be a source of detailed security requirements for development teams.")]),e._v(" "),t("p",[e._v("Security requirements are categorized into different buckets based on a shared higher order security function. For example, the ASVS contains categories such as authentication, access control, error handling / logging, and web services. Each category contains a collection of requirements  that  represent  the  best  practices  for  that  category  drafted  as  verifiable statements.")]),e._v(" "),t("p",[t("em",[t("strong",[e._v("Augmenting Requirements with User Stories and Misuse Cases")])])]),e._v(" "),t("p",[e._v("The ASVS requirements are basic verifiable statements which can be expanded upon with user stories and misuse cases. The advantage of a user story or misuse case is that it ties the application to exactly what the user or attacker does to the system, versus describing what the system offers to the user.")]),e._v(" "),t("p",[e._v("Here is an example of expanding on an ASVS 3.0.1 requirement. From the ‚ÄúAuthentication Verification  Requirements‚Äù  section  of  ASVS  3.0.1,  requirement  2.19  focuses  on  default passwords.")]),e._v(" "),t("p",[e._v("2.19 Verify there are no default passwords in use for the application framework or any components used by the application such as ‚Äúadmin/password‚Äù")]),e._v(" "),t("p",[e._v("This requirement contains both an action to verify that no default passwords exist, and also carries with it the guidance that no default passwords should be used within the application.")]),e._v(" "),t("p",[e._v("A user story focuses on the perspective of the user, administrator, or attacker of the system, and describes functionality based on what a user wants the system to do for them. A user story takes the form of ‚ÄúAs a user, I can do x, y, and z‚Äù")]),e._v(" "),t("p",[e._v("As a user, I can enter my username and password to gain access to the application.")]),e._v(" "),t("p",[e._v("As a user, I can enter a long password that has a maximum of 1023 characters.")]),e._v(" "),t("p",[e._v("When the story is focused on the attacker and their actions, it is referred to as a misuse case.")]),e._v(" "),t("p",[e._v("As an attacker, I can enter in a default username and password to gain access.")]),e._v(" "),t("p",[e._v("This  story  contains  the  same  message  as  the  traditional  requirement  from  ASVS,  with additional user or attacker details to help make the requirement more testable.")]),e._v(" "),t("p",[t("strong",[e._v("Implementation")])]),e._v(" "),t("p",[e._v("Successful use of security requirements involves four steps. The process includes discovering / selecting, documenting, implementing, and then confirming correct implementation of new security features and functionality within an application.")]),e._v(" "),t("p",[t("em",[t("strong",[e._v("Discovery and Selection")])])]),e._v(" "),t("p",[e._v("The process begins with discovery and selection of security requirements. In this phase, the developer is understanding security requirements from a standard source such as ASVS and choosing which requirements to include for a given release of an application. The point of discovery and selection is to choose a manageable number of security requirements for this release  or  sprint,  and  then  continue  to  iterate  for  each  sprint,  adding  more  security functionality over time.")]),e._v(" "),t("p",[t("em",[t("strong",[e._v("Investigation and Documentation")])])]),e._v(" "),t("p",[e._v("During  investigation  and  documentation,  the  developer  reviews  the  existing  application against the new set of security requirements to determine whether the application currently meets the requirement or if some development is required. This investigation culminates in the documentation of the results of the review.")]),e._v(" "),t("p",[t("em",[t("strong",[e._v("Implementation and Test")])])]),e._v(" "),t("p",[e._v("After  the  need  is  determined  for  development,  the  developer  must  now  modify  the application in some way to add the new functionality or eliminate an insecure option. In this phase the developer first determines the design required to address the requirement, and then completes the code changes to meet the requirement. Test cases should be created to confirm  the  existence  of  the  new  functionality  or  disprove  the existence  of  a  previously insecure option.")]),e._v(" "),t("p",[t("strong",[e._v("Vulnerabilities Prevented")])]),e._v(" "),t("p",[e._v("Security requirements define the security functionality of an application. Better security built in from the beginning of an applications life cycle results in the prevention of many types of vulnerabilities.")]),e._v(" "),t("p",[t("strong",[e._v("References")])]),e._v(" "),t("ul",[t("li",[t("p",[e._v("[OWASP Application Security Verification Standard &ASVS]\n(https://www.owasp.org/index.php/Application_Security_Architecture_Cheat_Sheet)")])]),e._v(" "),t("li",[t("p",[e._v("[OWASP Mobile Application Security Verification Standard MASVS]\n(https://github.com/OWASP/owasp-masvs)")])]),e._v(" "),t("li",[t("p",[e._v("[OWASP Top Ten ]\n(https://www.owasp.org/index.php/Category:OWASP_Top_Ten_Project)")])])])])}),[],!1,null,null,null);t.default=o.exports}}]);